# [1] 데이터 수집
import pandas as pd
# ((참고 - 임의로 난수를 만든 값으로 한 것이기 때문에 결과가 신빙성이 떨어짐))
data = pd.DataFrame({
    '운동시간': [1, 2, 3, 4, 5, 2, 3, 4, 5, 6,
                1, 2, 3, 4, 5, 2, 3, 4, 5, 6],
    '게임시간': [2, 3, 4, 5, 6, 3, 4, 5, 6, 7,
                2, 3, 4, 5, 6, 3, 4, 5, 6, 7],
    '체중': [60, 62, 64, 66, 68, 65, 67, 69, 71, 73,
            62, 64, 66, 68, 70, 64, 66, 68, 70, 72]
})

# [2] 데이터 통계 분석  # 게임 시간과 운동 시간에 따른 체중 변화 비교
Rformula = '체중 ~ 운동시간 + 게임시간'       # 1. 모형 수식 정의 # ((종속변수 ~ 독립변수??))
from statsmodels.formula.api import ols
model = ols(Rformula, data = data).fit()        # 2. 모델 피팅
print(model.params)     # 3. 모델 결과 확인 (회귀 계수)
'''
Intercept      38.722222
운동시간        -18.277778          # 평균적으로 운동 시간이 1시간 마다 체중이 18.27 감소한다.
게임시간         20.444444          # 평균적으로 게임 시간이 1시간 마다 체중은 20.44 증가한다.
dtype: float64
'''
print(model.pvalues)    # 3. 모델 결과 확인 (p값)
'''
Intercept      1.404150e-24
운동시간         6.968463e-22
게임시간         5.508640e-28
dtype: float64
'''

# [3] 학습된 모델 기준으로 새로운 샘플 체중을 예측하자. # 운동 시간과 게임 시간을 알고 있는 상태에서 체중 예측하기
newData = pd.DataFrame({'운동시간' : [0, 4, 2], '게임시간' : [2, 5, 7]})
print(newData)      # 예측 전
'''
   운동시간  게임시간
0     0     2
1     4     5
2     2     7
'''
# ~~ [2]에서 학습된 모델을 이용한 예측 수행 # 모델객체.predict(새로운샘플)
샘플의예측값 = model.predict(newData)
print(샘플의예측값)
'''
0     79.611111
1     67.833333
2    145.277778
dtype: float64
'''


